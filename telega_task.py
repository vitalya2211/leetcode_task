#https://t.me/c/1570297240/486
#Условие задачи: даны корни бинарных деревьев root и subRoot. Надо осуществить проверку, является ли subRoot поддеревом root с той же самой структурой и значениями в узлах.
#Пример:
#Ввод: root = [3,4,5,1,2], subRoot = [4,1,2]
#Вывод: true
#Объяснение: *на картинке к задаче
#Ввод: root = [3,4,5,1,2,null,null,null,null,0], subRoot = [4,1,2]
#Вывод: false

#https://t.me/c/1570297240/487
#Условие задачи: дан массив денег, находящихся в каждом из домов. Все дома, находящиеся в массиве, расположены кольцом, первый является соседом с последним. 
#Нашей задачей является ограбить на как можно более внушительную сумму, но есть одно но: нельзя красть в соседних домах, иначе произойдет включение сигнализации.
#Результатом вычислений должно являться число, показывающее максимальную выгоду от кражи.
#Пример:
#Ввод: nums = [2,3,2]
#Вывод: 3
#Объяснение: нельзя грабить первый и третий дома, так как они соседние.
#Ввод: nums = [1,2,3,1]
#Вывод: 4

#https://t.me/c/1570297240/489
#Условие задачи: дана строка, необходимо найти в ней палиндром наибольшей длины.
#Палиндром - строка, которая одинаково читается как справа-налево, так и слева-направо.
#Пример:
#Ввод: s = "babad"
#Вывод:  "bab"
#Объяснение: "aba" также является ответом
#Ввод: s = "cbbd"
#Вывод: "bb"

#https://t.me/c/1570297240/490
#Арифметическая прогрессия в массиве
# (https://leetcode.com/problems/arithmetic-slices/)Сложность: Средняя 
#Условие задачи: дан массив, который называется массивом арифметической прогрессии в случае, если содержит как минимум три элемента, а разница между соседними элементами одинаковая.
#Массивы [1,3,5,7,9], [7,7,7,7],  [3,-1,-5,-9] являются таковыми.
#Необходимо посчитать сколько подобных подмассивов находится в исходном.
#Подмассив - непрерывная последовательность исходного массива.
#Пример:
#Ввод: nums = [1,2,3,4]
#Вывод: 3
#Объяснение: [1, 2, 3], [2, 3, 4] и [1,2,3,4] являются арифметическими подмассивами.
#Ввод: nums = [1]
#Вывод: 0
#Решение задачи (https://telegra.ph/Arifmeticheskaya-progressiya-v-massive-Reshenie-zadachi-09-29)

#Расшифровка строки
# (https://leetcode.com/problems/decode-ways/)
#Сложность: Средняя
#Условие задачи: сообщение содержит символы из множества A-Z и может быть расшифровано следующим образом:
#'A' -> "1"
#'B' -> "2"
#'Z' -> "26"
#На воход подается строка , состоящая из чисел, необходимо посчитать сколькими способами можно ее расшифровать.
#Пример:
#Ввод: s = "12"
#Вывод: 2
#Объяснение: "12" можно расшифровать двумя путями: как (1 2)  = "AB", а также как и (12) = "L".
#Ввод:  s = "226"
#Вывод: 3
#Решение задачи (https://telegra.ph/Rasshifrovka-stroki-Reshenie-zadachi-10-01)

#https://t.me/c/1570297240/495 Слияние двух бинарных деревьев (https://leetcode.com/problems/merge-two-binary-trees/)
#Сложность: Лёгкая 
#Условие задачи: дается два бинарных дерева, надо осуществить их наложение друг на друга и вывести результат в новом дереве. 
#Наложение представляет из себя суммирование соответствующих значений из узлов двух деревьев.
#Пример:
#Ввод: root1 = [1,3,2,5], root2 = [2,1,3,null,4,null,7]
#Вывод:[3,4,5,5,4,null,7]
#Ввод: root1 = [1], root2 = [1,2]
#Вывод: [2,2]
#https://t.me/c/1570297240/496
#Поиск суммы в бинарном дереве поиска (https://leetcode.com/problems/two-sum-iv-input-is-a-bst/)
#Сложность: Лёгкая
#Условие задачи: дано бинарное дерево поиска, а также целевое значение. Необходимо определить, имеется ли в дереве два таких значения, в сумме дающие целевое значение, или же нет. 
#Пример:
#Ввод: root = [5,3,6,2,4,null,7], k = 9
#Вывод: true
#Ввод: root = [5,3,6,2,4,null,7], k = 28
#Вывод: false
#Решение задачи (https://telegra.ph/Poisk-summy-v-binarnom-dereve-poiska-Reshenie-zadachi-10-03)

#https://t.me/c/1570297240/497
#Сложность: Средняя
#Условие задачи: есть n комнат проиндексированных с 0, все они закрыты кроме комнаты с номером 0. Необходимо посетить все комнаты, однако этого нельзя сдеать не имея ключа от соответствующей закрытой двери. 
#При посещении какой-либо комнаты в ней находится определенная связка уникальных ключей, номер ключа означет номер комнаты, для которой он отпирает дверь. Можно использовать сразу все связку ключей. 
#На вход подается массив комнат, где в i-ячейке дается список ключей, находящихся в текущей комнате. Необходимо определеть, можно ли обойти все комнаты. 
#Пример:
#Ввод: rooms = [[1],[2],[3],[]]
#Вывод: true
#Объяснение: из 0 комнаты можно попасть в 1, из 1 во 2, из 2 в 3. 
#Ввод: rooms = [[1,3],[3,0,1],[2],[0]]
#Вывод: false





